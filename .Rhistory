geo_contaminacion_shiny <- st_read("./www/geo_contaminacion/geo_contaminacion.shp")
# Cargamos las librerías
library(dplyr)
library(tidyr)
library(leaflet)
library(sf)
library(readr)
library(leaflet.extras)
library(shiny)
library(tidyverse)
library(imputeTS)
library(lubridate)
library(shinythemes)
library(Hmisc)
library(calendR)
library(plotly)
library(shinydashboard)
library(patchwork)
library(gridExtra)
library(ggplot2)
geo_contaminacion_shiny <- st_read("./www/geo_contaminacion/geo_contaminacion.shp")
geo_contaminacion_shiny <- st_transform(geo_contaminacion_shiny, 4326)
geo_contaminacion_shiny <- geo_contaminacion_shiny %>%
rename(Estacion = Estacin) %>%
rename(PM2.5 = PM2_5) %>%
select(-Ruido)
geo_contaminacion_shiny$dia <- as.numeric(geo_contaminacion_shiny$dia)
geo_contaminacion_shiny$mes <- as.numeric(geo_contaminacion_shiny$mes)
geo_contaminacion_shiny$año <- as.numeric(geo_contaminacion_shiny$año)
geo_contaminacion_shiny$MesDia <- format(geo_contaminacion_shiny$Fecha, "%m-%d")
estacion <- "Pista Silla"
datos_estacion <- geo_contaminacion_shiny %>%
filter(Estacion == estacion, año == 2022)
# Crea un vector donde todos los valores son ligeramente
# inferiores que el mínimo valor de NO2 de los datos
dias_sin_datos <- rep(min(datos_estacion$NO2) - 0.05, 365)
# Rellena los días con los datos de NO2 disponibles
for (i in 1:nrow(datos_estacion)) {
fecha <- as.Date(paste(datos_estacion$año[i], datos_estacion$mes[i], datos_estacion$dia[i], sep = "-"))
indice <- as.numeric(format(fecha, "%j"))
dias_sin_datos[indice] <- datos_estacion$NO2[i]
}
calendR(year = 2022,
special.days = dias_sin_datos,
low.col = "white",
special.col = "#FF0000",
gradient = TRUE,
legend.pos = "bottom")
runApp('Grupo8_MiniProyecto.R')
runApp('Grupo8_MiniProyecto.R')
runApp('Grupo8_MiniProyecto.R')
library(shiny); runApp('Grupo8_MiniProyecto_cuadro.R')
library(shiny); runApp('Grupo8_MiniProyecto_cuadro.R')
geo_contaminacion_shiny <- st_read("./www/geo_contaminacion/geo_contaminacion.shp")
geo_contaminacion_shiny <- st_transform(geo_contaminacion_shiny, 4326)
geo_contaminacion_shiny <- geo_contaminacion_shiny %>%
rename(Estacion = Estacin) %>%
rename(PM2.5 = PM2_5) %>%
select(-Ruido)
geo_contaminacion_shiny$dia <- as.numeric(geo_contaminacion_shiny$dia)
geo_contaminacion_shiny$mes <- as.numeric(geo_contaminacion_shiny$mes)
geo_contaminacion_shiny$año <- as.numeric(geo_contaminacion_shiny$año)
geo_contaminacion_shiny$MesDia <- format(geo_contaminacion_shiny$Fecha, "%m-%d")
calendR(year = 2022,
special.days = dias_sin_datos,
low.col = "white",
special.col = "#FF0000",
gradient = TRUE,
legend.pos = "bottom")
datos_estacion <- geo_contaminacion_shiny %>%
filter(Estacion == "Avda. Francia") %>%
filter(año == 2022)
part_seleccionada <- "CO"
valores_part_seleccionada <- datos_estacion[[part_seleccionada]]
dias_sin_datos <- rep(min(valores_part_seleccionada) - 0.05, 365)
part_seleccionada <- "CO"
valores_part_seleccionada <- datos_estacion[[part_seleccionada]]
dias_sin_datos <- rep(min(valores_part_seleccionada), 365)
View(geo_contaminacion_shiny)
part_seleccionada <- "SO2"
valores_part_seleccionada <- datos_estacion[[part_seleccionada]]
dias_sin_datos <- rep(min(valores_part_seleccionada) - 0.05, 365)
for (i in 1:nrow(datos_estacion)) {
fecha <- as.Date(paste(datos_estacion$año[i], datos_estacion$mes[i], datos_estacion$dia[i], sep = "-"))
indice <- as.numeric(format(fecha, "%j"))
dias_sin_datos[indice] <- datos_estacion[[part_seleccionada]][i]
}
}
calendR(year = 2022,
special.days = dias_sin_datos,
low.col = "white",
special.col = "#FF0000",
gradient = TRUE,
legend.pos = "bottom")
datos_estacion <- geo_contaminacion_shiny %>%
filter(Estacion == "Molí del Sol") %>%
filter(año == 2022)
part_seleccionada <- "SO2"
valores_part_seleccionada <- datos_estacion[[part_seleccionada]]
dias_sin_datos <- rep(min(valores_part_seleccionada) - 0.05, 365)
for (i in 1:nrow(datos_estacion)) {
fecha <- as.Date(paste(datos_estacion$año[i], datos_estacion$mes[i], datos_estacion$dia[i], sep = "-"))
indice <- as.numeric(format(fecha, "%j"))
dias_sin_datos[indice] <- datos_estacion[[part_seleccionada]][i]
}
calendR(year = 2022,
special.days = dias_sin_datos,
low.col = "white",
special.col = "#FF0000",
gradient = TRUE,
legend.pos = "bottom")
runApp('Grupo8_MiniProyecto_cuadro.R')
runApp('Grupo8_MiniProyecto_cuadro.R')
library(shiny); runApp('Grupo8_MiniProyecto_web.R')
rsconnect::setAccountInfo(name='carlosgmzsz', token='C0483CB4BAA57B5CC1EC7804C987E680', secret='AZK2qvREb7QVUffkB+alW3Z1khwbeUhm7iv0IjKb')
rsconnect::setAccountInfo(name='carlosgmzsz', token='C0483CB4BAA57B5CC1EC7804C987E680', secret='AZK2qvREb7QVUffkB+alW3Z1khwbeUhm7iv0IjKb')
library(shiny); runApp('Grupo8_MiniProyecto_cuadro.R')
runApp('Grupo8_MiniProyecto_cuadro.R')
runApp()
shiny::runApp()
shiny::runApp()
runApp()
install.packages("tidyverse")
install.packages("tidyr")
shiny::runApp()
shiny::runApp()
